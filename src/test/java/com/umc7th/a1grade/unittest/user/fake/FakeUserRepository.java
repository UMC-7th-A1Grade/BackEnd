package com.umc7th.a1grade.unittest.user.fake;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

import com.umc7th.a1grade.domain.user.entity.User;
import com.umc7th.a1grade.domain.user.repository.UserRepository;

public class FakeUserRepository implements UserRepository {
  private final AtomicLong autoGeneratedId = new AtomicLong(1);
  private final List<User> data = new ArrayList<>();

  public Optional<User> findById(Long userId) {
    return data.stream().filter(item -> Objects.equals(item.getId(), userId)).findAny();
  }

  @Override
  public Optional<User> findByNickname(String nickname) {
    return data.stream().filter(item -> Objects.equals(item.getNickName(), nickname)).findAny();
  }

  @Override
  public Optional<User> findBySocialId(String socialId) {
    return data.stream().filter(item -> Objects.equals(item.getSocialId(), socialId)).findAny();
  }

  @Override
  public User save(User user) {
    if (user.getId() == null || user.getId() == 0) {
      User newUser =
          User.builder()
              .id(autoGeneratedId.getAndIncrement())
              .email(user.getEmail())
              .socialId(user.getSocialId())
              .nickName(user.getNickName())
              .build();
      data.add(newUser);
      return newUser;
    } else {
      data.removeIf(a -> a.getId().equals(user.getId()));
      data.add(user);
      return user;
    }
  }

  @Override
  public boolean existsByNickName(String nickname) {
    return data.stream().anyMatch(user -> Objects.equals(user.getNickName(), nickname));
  }

  @Override
  public Long countCorrectAnswerByUserId(Long userId) {
    return null;
  }

  @Override
  public List<User> findUserWithCorrectAnswers() {
    return null;
  }

  public List<User> findAll() {
    return new ArrayList<>(data);
  }

  @Override
  public List<User> findUsersWhoSolvedQuestions(LocalDateTime start, LocalDateTime end) {
    return null;
  }

  public void clear() {
    data.clear();
    autoGeneratedId.set(0);
  }
}
